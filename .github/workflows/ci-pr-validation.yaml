#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

name: PR validation
on:
  pull_request:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  package-windows:
    timeout-minutes: 120
    name: Build CPP Client on ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    env:
      VCPKG_ROOT: '${{ github.workspace }}/vcpkg'
      INSTALL_DIR: 'C:\\pulsar-cpp'
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: 'Windows x64'
            os: windows-2022
            triplet: x64-windows-static
            vcpkg_dir: 'C:\vcpkg'
            suffix: 'windows-win64'
            generator: 'Visual Studio 17 2022'
            arch: '-A x64'

    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: Restore vcpkg and its artifacts.
        uses: actions/cache@v3
        id: vcpkg-cache
        with:
          path: |
            ${{ env.VCPKG_ROOT }}
            vcpkg_installed
            !${{ env.VCPKG_ROOT }}/.git
            !${{ env.VCPKG_ROOT }}/buildtrees
            !${{ env.VCPKG_ROOT }}/packages
            !${{ env.VCPKG_ROOT }}/downloads
          key: |
            ${{ runner.os }}-${{ matrix.triplet }}-${{ hashFiles( 'vcpkg.json' ) }}

      - name: Build and package
        shell: bash
        run: |
          mkdir -p ${{ env.INSTALL_DIR }}
          cp -r ./include ${{ env.INSTALL_DIR }}
          ls -l ${{ env.INSTALL_DIR }}

      - name: Zip artifact
        shell: bash
        run: 7z a -tzip Windows-${{ matrix.triplet }}.zip ${{ env.INSTALL_DIR }}

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: Windows-${{ matrix.triplet }}.zip
          asset_name: Windows-${{ matrix.triplet }}.zip
          tag: ${{ github.ref }}
          overwrite: true
